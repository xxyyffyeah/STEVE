{
    "test_acc": [
        [
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0
        ],
        [
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1
        ],
        [
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1
        ],
        [
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0
        ],
        [
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0
        ],
        [
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1
        ],
        [
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0
        ],
        [
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0
        ],
        [
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1
        ],
        [
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        [
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0
        ],
        [
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0
        ],
        [
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0
        ],
        [
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ]
    ],
    "prompt": [
        "You will answer a reasoning question. Think step by step. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure clarity and consistency:\n\n1. Break down the problem and list each component of the calculation separately.\n2. Use mathematical symbols to represent the calculation, such as \"1 + 1 + 1 + 1 + 2 + 2 = 8.\"\n3. Maintain a consistent format throughout the response, using a structure like \"X + Y + Z = Total.\"\n4. Avoid redundancy by stating the total only once, either within the calculation or as a separate statement.\n5. Explicitly state all components involved in the calculation without using ellipses or implied content.\n6. Keep the response clear and concise, avoiding unnecessary words or phrases.\n\nThe last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide the shortest possible response that accurately answers the question. Focus on delivering the numerical answer directly, without additional context or explanation. Your response should only include the numerical answer in the format 'Answer: $VALUE' with no preceding text. Eliminate any redundant information that does not contribute to the correctness of the numerical answer. Avoid using unnecessary punctuation or words that do not affect the correctness of the answer. Optimize your response for efficiency by minimizing text length while maintaining accuracy.",
        "You will answer a reasoning question. Think step by step and provide a clear and concise explanation of your reasoning process. Explain each step of your calculation clearly, ensuring that the reasoning process is easy to follow. Ensure your response is relevant to the specific context of the question, addressing any specific details or scenarios mentioned. If the input is ambiguous or incomplete, ask for clarification or provide a range of possible answers based on different interpretations. Use a friendly and engaging tone to enhance user experience, especially in educational contexts. Conclude with 'Answer: $VALUE', but feel free to include additional context if it enhances understanding.",
        "You will answer a reasoning question. Provide a brief reasoning. Focus on the numerical answer only. Output the count as 'Count: $VALUE' where VALUE is a numerical value. Keep the response as short as possible while maintaining clarity. Ensure the response is consistent regardless of input variations.",
        "Compute the answer directly and concisely. Provide only the numerical result using the format: '= $VALUE', where VALUE is the numerical answer.",
        "You will answer a reasoning question. Think step by step. List each calculation step explicitly without using ellipses, ensuring clarity in the process. Use a consistent format for calculations, such as '3 clarinets + 1 trombone = 4 instruments', to ensure clarity and ease of parsing. Ensure consistent terminology for all items to facilitate accurate parsing and verification. Implement a standardized response structure to handle potential errors and ensure reliable parsing. Simplify expressions by avoiding unnecessary complexity and using direct, clear language to describe calculations. If the calculation is clearly shown, omit the 'Answer: $VALUE' line to streamline the response.",
        "You will answer a reasoning question. Identify the type of question and adapt your reasoning strategy accordingly. Think step by step, using logical reasoning, arithmetic calculations, or categorization as needed. Explain your reasoning process in detail before providing the final answer. After reasoning, review your steps to ensure accuracy. Consider the context and any implicit information in the question to ensure a comprehensive understanding. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value. If the answer is not strictly numerical, provide a clear explanation.",
        "You will answer a reasoning question. First, identify the type of problem (e.g., counting, categorization) before proceeding. For counting tasks, list each item and its quantity before summing them up. Pay special attention to text within parentheses, as it may contain critical information for solving the problem. After deriving an answer, re-evaluate the problem statement to ensure all elements have been considered. Compare your answer with the expected format and analyze any discrepancies to identify potential errors. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value. Use feedback from incorrect predictions to refine your approach in future tasks.",
        "You will answer a reasoning question. Follow these steps to ensure clarity and accuracy:\n\n1. **List All Components**: Begin by explicitly listing each item and its quantity in a consistent format, such as '1 (item name),' to avoid ambiguity.\n\n2. **Explain Each Step**: Provide a brief explanation of the context or logic behind each step of the calculation to ensure transparency and understanding.\n\n3. **Perform Calculations**: Add up the quantities of each item to find the total number of objects.\n\n4. **Verification Step**: After calculating the total, verify the result by summarizing the steps taken and confirming the final count.\n\n5. **Avoid Ambiguity**: Ensure that all information is explicitly stated without the use of ellipses or placeholders.\n\n6. **Encourage Redundancy for Clarity**: Restate key information or steps if necessary to ensure clarity and prevent misinterpretation.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "Provide a concise answer to the reasoning question. Focus on the final numerical answer. Output only the numerical value when appropriate.",
        "You will answer a reasoning question. Clearly state each step of your calculation process, including the addition of each type of instrument. Provide a detailed breakdown of your reasoning before concluding with the final answer. Consider all possible scenarios, including when there are zero items of a type, and ensure your response accounts for these cases. After calculating, verify your result by re-evaluating the sum to ensure it matches the expected total. If you detect a discrepancy in your calculation, flag it and attempt to correct it before providing the final answer. Your reasoning should be transparent and easy to follow, ensuring that each step is clearly explained. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy:\n\n1. **Identify and List**: First, list each object mentioned in the input.\n2. **Apply Numerical Quantifiers**: Pay special attention to numerical descriptors such as 'two' or 'three' that indicate multiple items, and apply them to the corresponding objects.\n3. **Enumerate Objects**: As you count, enumerate each object, such as '1. couch, 2. oven, 3. microwave, 4. microwave, 5. fridge,' to ensure accuracy.\n4. **Sum the Total**: Sum the total number of objects after applying the numerical quantifiers.\n5. **Error-Checking**: Review the list to ensure all objects and their quantities have been accurately accounted for.\n6. **Contextual Awareness**: Consider the context of each item and its descriptors to ensure an accurate count.\n7. **Example for Clarity**: For example, if the input is 'two apples and a banana,' the correct count is three objects.\n8. **Feedback Mechanism**: If uncertain about the count, review the list and recount to confirm accuracy.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step, ensuring each step is clearly numbered or bulleted, and avoid unnecessary steps. Emphasize mathematical accuracy throughout your reasoning. After reasoning, provide a concise final answer. Avoid redundancy by ensuring the final answer appears only once, in the format: 'Answer: $VALUE' where VALUE is a numerical value. Use ellipses appropriately to indicate omitted content, if necessary. The final answer format should be the only line containing the numerical answer, without additional text.",
        "You will answer a reasoning question. First, identify the type of question being asked (e.g., counting, reasoning, comparison) and tailor your response accordingly. Think step by step and provide a single, clear answer without repeating the numerical value. If the input data is ambiguous or incomplete, request clarification or provide a best-guess answer with a confidence level. When appropriate, offer additional insights or suggestions based on the answer to enhance user engagement. The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide a detailed, step-by-step explanation of your reasoning and calculations. Begin by listing each item and its quantity before calculating the total. After calculating the total, verify the arithmetic by recounting the items or restating the problem. Identify and mention any specific conditions or constraints that may affect the calculation. Ensure that all steps and calculations are clearly and completely stated, without omitting any part of the reasoning process. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Rephrase the question in your response to ensure clarity. List each item you are counting before providing the final numerical answer. Explain the reasoning behind your answer to ensure clarity and alignment with the question's context. Detail each step of your reasoning process to ensure thoroughness and accuracy in your answer. If the input is unclear, include a verification step or ask for clarification to ensure accurate understanding. Adhere to a consistent response format that aligns with expected evaluation criteria. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "Provide the numerical answer directly and concisely. For simple questions, respond with only the numerical answer in the format: 'Answer: $VALUE'. Ensure no additional text is included. For complex reasoning questions, think step by step. Your response should be optimized for quick processing and evaluation. Example: For the question 'How many apples are there if you have 3 apples?', respond with 'Answer: 3'. Avoid responses like 'You have three apples, so the answer is 3.'",
        "You will answer a reasoning question. Think step by step. List each item and its quantity before performing the addition. Ensure all components of the calculation are explicitly stated and consistent with the final answer. Use mathematical symbols or formatting to clearly delineate the calculation process. Include a brief verification step or statement confirming the correctness of the calculation. Conclude with the final numerical result clearly stated. Your goal is to ensure clarity, accuracy, and completeness in your response.",
        "You will answer a reasoning question. Think step by step. Explain your counting method clearly, specifying each type of item and any assumptions made during the process. After calculating your answer, verify your result by recounting or using a different method to ensure accuracy. Consider any contextual clues or implicit details that might influence the count, and incorporate these into your reasoning. Reflect on similar past queries and known answers to identify potential errors in your reasoning. Use clear and precise language to describe your counting process, avoiding any ambiguities. If unsure, revisit your reasoning steps to ensure the accuracy of your final answer. Be open to feedback on your answer's correctness and use it to refine your future predictions. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy and consistency:\n\n1. List each item and its quantity before calculating the total.\n2. Identify all items and categorize them as animals or non-animals.\n3. Count each category separately.\n4. After listing, verify the count by cross-checking with the input list to ensure no items are missed or miscounted.\n5. Interpret phrases like 'a couple of' or 'a few' with their numerical equivalents, and clarify any ambiguous terms before proceeding with the count.\n6. Use logical reasoning to cross-verify the total with the input list, ensuring the count aligns with the provided items.\n\nProvide the total in the format: 'Total animals: X' where X is the numerical value.",
        "Provide a concise calculation summary and directly give the total number of objects in the format 'Total objects: X'. Verify the calculation for accuracy before providing the final total. Use mathematical symbols if applicable, and avoid ellipses or any indication of omitted content.",
        "You will answer a reasoning question. Think step by step. Follow these strategies:\n\n1. **Explicit Counting Instructions**: Identify and count each distinct object mentioned in the input, paying special attention to numerical quantifiers.\n2. **Clarification on Numerical Quantifiers**: Ensure that numerical descriptors, such as 'four cars,' are accurately parsed and counted as separate entities.\n3. **List Parsing Strategy**: When presented with a list, treat each item as an individual object unless specified otherwise, and verify the count of each item.\n4. **Verification Step**: After determining the count, cross-check the total with the input list to ensure accuracy before finalizing the answer.\n5. **Contextual Awareness**: Consider the context and structure of the input to accurately interpret the relationships between items.\n6. **Error Recognition and Correction**: If the initial count seems inconsistent with the input, re-evaluate the list to identify any discrepancies.\n7. **Feedback Integration**: Use feedback from previous tasks to refine your counting and comprehension strategies.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy:\n\n1. Identify and count each item individually before summing them.\n2. Pay special attention to phrases that indicate quantities, such as 'two heads of broccoli,' and ensure these are counted correctly.\n3. After calculating, verify your count by listing each item and its quantity before providing the final answer.\n4. Double-check your calculations to ensure accuracy before finalizing your answer.\n5. Be cautious of plural forms and ensure each item is counted correctly.\n6. If uncertain, review your reasoning and ensure each step logically leads to the final count.\n7. Use logical reasoning to ensure each step of your calculation is sound and leads to the correct total.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide a concise and direct response. Only include additional context if necessary for understanding. Ensure your final output strictly follows the format: 'Answer: $VALUE' where VALUE is a numerical value. Validate your response to match this format before finalizing.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy:\n\n1. **Explicit Counting Instructions**: Count each item individually. Pay special attention to quantities expressed in words, such as 'four cars.'\n\n2. **Parsing Guidance**: When encountering phrases with numbers, like 'four cars,' treat each number as a separate object.\n\n3. **Step-by-Step Breakdown**: List each item and its count separately before summing them to ensure no items are missed.\n\n4. **Verification Emphasis**: After counting, double-check your total to ensure accuracy before providing the final answer.\n\n5. **Error Awareness**: Be mindful of common counting errors and take a moment to self-correct if the total seems off.\n\n6. **Feedback Loop**: After providing an answer, reflect on your reasoning process to ensure all steps were followed correctly.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure clarity and accuracy:\n\n1. **Explicit Enumeration**: List each item explicitly and ensure no omissions. Use a structured format, such as bullet points or numbered lists, to maintain consistency.\n\n2. **Verification Step**: After listing all items, recount to confirm the total number of items matches the stated total.\n\n3. **Redundancy Avoidance**: Provide a concise summary without repeating information unnecessarily.\n\n4. **Error Handling**: If there is a discrepancy between the listed items and the total count, re-evaluate the list and correct any errors.\n\n5. **Clarification on Numerical Value**: Ensure the numerical value is the result of a verified count of the listed items.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step. Explain why the answer is correct by summarizing the reasoning process. Regardless of the order or format of the input, ensure to accurately identify and count the distinct objects. Identify and count only unique objects, ignoring any non-object items or duplicates unless specified otherwise. Apply this counting strategy to various types of items and larger lists, ensuring accuracy and adaptability. Use an efficient approach to counting that can scale to larger datasets or more complex queries. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide a concise answer without unnecessary explanation. Focus on delivering the numerical answer directly. Ensure the answer is formatted as 'Answer: $VALUE' to maintain consistency. Use step-by-step reasoning only for complex problems; otherwise, provide the answer directly. Avoid redundant explanations when the task is straightforward.",
        "You will answer a reasoning question. Think step by step, but keep explanations brief and to the point. Provide concise responses to minimize processing time. List items using commas and avoid unnecessary words. Eliminate redundant phrases to streamline the response. Present the answer immediately after listing the items. Use symbols or abbreviations to shorten the response if possible. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value. Example: 'Fruits: orange, apple, blackberry. Answer: 3'",
        "Provide the numerical answer directly. Respond with only 'Answer: $VALUE' and no other text. Do not list or describe the items unless explicitly asked. Simplify your response to the minimal necessary information to ensure efficient processing. Avoid any additional text that could confuse the function's interpretation. Example: For the question 'How many apples?', respond with 'Answer: 5'.",
        "You will answer a reasoning question. Follow these steps to ensure clarity and accuracy:\n\n1. List each type of item and its quantity.\n2. Perform the necessary calculations step by step, detailing each operation.\n3. Double-check your calculations to ensure accuracy.\n4. Provide a complete and clear explanation without omissions or ambiguous phrasing.\n5. Implement a secondary check to verify the arithmetic is correct.\n6. Consider any additional information or complexities in the question and adapt your response accordingly.\n7. Present the final answer in the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy:\n\n1. **List Enumeration**: Begin by listing each item individually to ensure all relevant items are considered.\n2. **Verification Step**: After listing, verify that the number of items matches the count you provide.\n3. **Contextual Completeness Check**: Ensure all relevant items are included in your list based on the context provided.\n4. **Clarification and Error Handling**: If unsure about the completeness of your list, include a clarification statement or ask for confirmation.\n5. **Algorithmic Approach Guidance**: First, generate a list of items, then count them to ensure the number matches your final answer.\n6. **Feedback Loop**: After providing your answer, review your steps to ensure accuracy and completeness.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these guidelines to ensure clarity and completeness:\n\n1. Identify the type of reasoning needed and apply the appropriate method.\n2. List each type of object and its count before summing them to ensure transparency in your calculation.\n3. Provide your reasoning in a structured format, with each step clearly numbered.\n4. If the input is unclear or incomplete, ask for clarification or state any assumptions made.\n5. After calculating, briefly verify the accuracy of your answer by summarizing the steps taken.\n6. Conclude with the final answer in the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide only the final numerical answer unless detailed reasoning is requested. Avoid repeating information or providing unnecessary explanations. Ensure the answer is clearly formatted as 'Answer: $VALUE' on a separate line to facilitate easy identification. Aim for the simplest possible response that accurately answers the question. Your response will be used in a system that checks for correctness, so prioritize clarity and brevity.",
        "You will answer a reasoning question. Break down the problem into smaller, manageable steps, and explain each step clearly to ensure a thorough understanding and accurate calculation. Clearly state your counting method, including any assumptions or groupings made during the process. After calculating your answer, re-evaluate your steps to ensure accuracy. Confirm your result by recounting or cross-referencing with the provided data. Check if your calculated answer falls within a reasonable range of expected values. If it seems off, consider re-evaluating your steps or providing a confidence score. Consider any implicit details or additional data points that could affect your count to avoid undercounting or overcounting. Provide a step-by-step breakdown of your counting process to help identify any logical errors or misinterpretations. If your answer differs from the expected result, analyze the discrepancy to adjust your future reasoning processes. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide a concise numerical answer. Respond only with 'Answer: $VALUE' and no additional explanation. Do not include object descriptions or counts, only provide the final numerical answer. If the question is unclear or cannot be answered with a number, respond with 'Answer: N/A'. Always start your response with 'Answer:' to ensure consistency. For questions about object counts, respond directly with the number of objects. Your response should be optimized for quick processing by a string-based function.",
        "You will answer a reasoning question. Follow these steps to ensure accuracy:\n\n1. List each type of animal and its quantity before calculating the total.\n2. Apply logical and arithmetic reasoning to ensure accurate calculations.\n3. After calculating the total, verify the sum by recounting the listed quantities.\n4. Consider any additional context or implicit information that might affect the total count.\n5. Pay attention to any contextual hints that might suggest additional animals not explicitly listed.\n6. Reflect on past errors in similar tasks to improve accuracy.\n7. If uncertain about the total, consider asking the user for clarification or additional information.\n8. Clearly outline each step of the reasoning process to ensure transparency and accuracy.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step and provide a detailed breakdown of your reasoning process. Consider any qualifiers or exceptions in the input and adjust your response accordingly. If you detect any inconsistencies or errors in the input, note them before providing the final answer. For longer lists, group similar items together to maintain clarity. Consider edge cases and provide a robust response that accounts for potential complexities in the input. The last line of your response should be in the following format: 'Total animals: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step. First, list each item identified as a vegetable before counting them. After identifying and counting the items, verify the total by recounting or cross-referencing with the input list. Ensure that all relevant information from the input is considered, and clarify any ambiguous terms or quantities. Pay attention to keywords or phrases that indicate quantities, such as 'two cabbages,' and ensure they are accurately accounted for in the calculation. If you are unsure about the accuracy of your calculation, consider asking for confirmation or additional information. Reflect on your reasoning process and consider how it aligns with the input data to improve accuracy. Strive for accuracy in your calculations, as this will be validated against known data. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. List each item and its quantity directly using the format 'quantity:item', separated by commas. After listing, provide the total number of items. Ensure the total matches the input list. The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value. Provide the total number of fruits only in the 'Answer' section.",
        "You will answer a reasoning question. Provide a concise and direct response without unnecessary details. Think step by step and use a structured format. List each item and its count in a bullet point format, using mathematical symbols such as '+', '=', and numbers to clearly show the calculation process. Avoid repeating information; state each item only once. The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value. For example:\n\n- 1 chair\n- 1 stove\n- 1 table\n- 2 lamps\n- 1 bed\n- 1 couch\n- 1 toaster\n- 1 microwave\n- 1 car\n\nTotal: 1 + 1 + 1 + 2 + 1 + 1 + 1 + 1 + 1 = 10\n\nAnswer: 10",
        "You will answer a reasoning question. Provide a brief summary of the calculation process and ensure accurate arithmetic. Conclude with a direct statement: 'The total is $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide the most concise response possible while maintaining clarity. Think step by step, and avoid unnecessary repetition or redundant phrases unless explicitly required. Use simple and direct language to convey your answer. Ensure your response is robust and consistent, even with variations in input. Focus on delivering the correct numerical value efficiently. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Begin your response with the final answer, followed by any necessary reasoning. Use efficient reasoning to arrive at the answer quickly. Provide a concise answer after minimal reasoning. Ensure the answer is clearly formatted and stands out from any reasoning. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step. Explain the reasoning behind your answer, especially if the input is complex or ambiguous. If the input contains categories or sub-items, ensure to count only the primary objects and clarify any assumptions made. Conclude your response with 'The total number of objects is: $VALUE' where VALUE is a numerical value. If the input list is incomplete or malformed, identify the issue and communicate it clearly in your response. Consider scalability by applying your reasoning to larger datasets, ensuring accuracy and consistency.",
        "You will answer a reasoning question. Think step by step, but summarize calculations concisely. List each step of the calculation clearly and concisely. Use the following format for your response: \"Calculation: [detailed steps] Result: $VALUE\" where VALUE is a numerical value. Avoid repeating the final answer in different formats and do not use ellipses.",
        "You will answer a reasoning question. Think step by step. List each instrument and its quantity, then sum them step by step to ensure clarity and accuracy. After calculating, double-check each step to ensure the arithmetic operations are correct and consistent with the final answer. Consider any additional context or rules that might influence the total number of instruments, and include this in your reasoning. After arriving at a total, re-evaluate your calculation and provide a brief rationale for the answer to ensure it aligns with the problem statement. If you detect any inconsistencies or errors in your calculations, correct them before finalizing your answer. Use a validation step to cross-reference your result with the initial data. Use multiple methods to verify your answer, such as re-calculating using a different approach or cross-referencing with known data. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Think step by step and list each quantity and its corresponding instrument before summing them up. Use consistent terms such as 'total number of instruments' or 'sum of instruments' when referring to the final count. Avoid using ellipses or ambiguous symbols; instead, provide a clear and complete explanation of each step. Conclude with a verification statement that confirms the calculation, such as 'Therefore, the total number of musical instruments is $VALUE.' After calculating, briefly recheck the arithmetic operation to ensure accuracy, and mention any discrepancies if found. Reiterate the total number of instruments after listing the individual quantities to ensure clarity and understanding. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "Provide a concise answer to the reasoning question. Begin with the answer, followed by a brief explanation if necessary. State the answer directly and succinctly. Avoid repeating the answer in different forms. If possible, provide the answer as a standalone number. Focus on efficiency and clarity in your response. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Provide a concise numerical answer. Do not list items unless necessary for the answer. Provide the answer as a number only, without additional text. Ensure the response format is consistent regardless of input variations. Your response should be in the format: 'Number of fruits: $VALUE' where VALUE is a numerical value."
    ],
    "validation_acc": [],
    "rank": [
        [
            0.92,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a concise and direct response without unnecessary details",
                " Think step by step and use a structured format",
                " List each item and its count in a bullet point format, using mathematical symbols such as '+', '=', and numbers to clearly show the calculation process",
                " Avoid repeating information; state each item only once",
                " The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                " For example:\n\n- 1 chair\n- 1 stove\n- 1 table\n- 2 lamps\n- 1 bed\n- 1 couch\n- 1 toaster\n- 1 microwave\n- 1 car\n\nTotal: 1 + 1 + 1 + 2 + 1 + 1 + 1 + 1 + 1 = 10\n\nAnswer: 10"
            ],
            "I have a chair, a stove, a table, two lamps, a bed, a couch, a toaster, a microwave, and a car. How many objects do I have?"
        ],
        [
            0.9,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these guidelines to ensure clarity and completeness:\n\n1",
                " Identify the type of reasoning needed and apply the appropriate method",
                "\n2",
                " List each type of object and its count before summing them to ensure transparency in your calculation",
                "\n3",
                " Provide your reasoning in a structured format, with each step clearly numbered",
                "\n4",
                " If the input is unclear or incomplete, ask for clarification or state any assumptions made",
                "\n5",
                " After calculating, briefly verify the accuracy of your answer by summarizing the steps taken",
                "\n6",
                " Conclude with the final answer in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a bed, a fridge, a lamp, a toaster, four chairs, and a table. How many objects do I have?"
        ],
        [
            0.88,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure clarity and accuracy:\n\n1",
                " List each type of item and its quantity",
                "\n2",
                " Perform the necessary calculations step by step, detailing each operation",
                "\n3",
                " Double-check your calculations to ensure accuracy",
                "\n4",
                " Provide a complete and clear explanation without omissions or ambiguous phrasing",
                "\n5",
                " Implement a secondary check to verify the arithmetic is correct",
                "\n6",
                " Consider any additional information or complexities in the question and adapt your response accordingly",
                "\n7",
                " Present the final answer in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a piano, an accordion, three trombones, five clarinets, a violin, a drum, a trumpet, and three flutes. How many musical instruments do I have?"
        ],
        [
            0.88,
            "0",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy:\n\n1",
                " Identify and count each item individually before summing them",
                "\n2",
                " Pay special attention to phrases that indicate quantities, such as 'two heads of broccoli,' and ensure these are counted correctly",
                "\n3",
                " After calculating, verify your count by listing each item and its quantity before providing the final answer",
                "\n4",
                " Double-check your calculations to ensure accuracy before finalizing your answer",
                "\n5",
                " Be cautious of plural forms and ensure each item is counted correctly",
                "\n6",
                " If uncertain, review your reasoning and ensure each step logically leads to the final count",
                "\n7",
                " Use logical reasoning to ensure each step of your calculation is sound and leads to the correct total",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a potato, a yam, two heads of broccoli, and a cauliflower. How many vegetables do I have?"
        ],
        [
            0.87,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure clarity and accuracy:\n\n1",
                " **List All Components**: Begin by explicitly listing each item and its quantity in a consistent format, such as '1 (item name),' to avoid ambiguity",
                "\n\n2",
                " **Explain Each Step**: Provide a brief explanation of the context or logic behind each step of the calculation to ensure transparency and understanding",
                "\n\n3",
                " **Perform Calculations**: Add up the quantities of each item to find the total number of objects",
                "\n\n4",
                " **Verification Step**: After calculating the total, verify the result by summarizing the steps taken and confirming the final count",
                "\n\n5",
                " **Avoid Ambiguity**: Ensure that all information is explicitly stated without the use of ellipses or placeholders",
                "\n\n6",
                " **Encourage Redundancy for Clarity**: Restate key information or steps if necessary to ensure clarity and prevent misinterpretation",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have two couches, a toaster, two chairs, four microwaves, a table, and a lamp. How many objects do I have?"
        ],
        [
            0.87,
            "0",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy:\n\n1",
                " List each type of animal and its quantity before calculating the total",
                "\n2",
                " Apply logical and arithmetic reasoning to ensure accurate calculations",
                "\n3",
                " After calculating the total, verify the sum by recounting the listed quantities",
                "\n4",
                " Consider any additional context or implicit information that might affect the total count",
                "\n5",
                " Pay attention to any contextual hints that might suggest additional animals not explicitly listed",
                "\n6",
                " Reflect on past errors in similar tasks to improve accuracy",
                "\n7",
                " If uncertain about the total, consider asking the user for clarification or additional information",
                "\n8",
                " Clearly outline each step of the reasoning process to ensure transparency and accuracy",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a bear, a dog, a cow, a cat, two pigs, a donkey, a fish, a frog, and two goats. How many animals do I have?"
        ],
        [
            0.87,
            "0",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy:\n\n1",
                " **Explicit Counting Instructions**: Count each item individually",
                " Pay special attention to quantities expressed in words, such as 'four cars",
                "'\n\n2",
                " **Parsing Guidance**: When encountering phrases with numbers, like 'four cars,' treat each number as a separate object",
                "\n\n3",
                " **Step-by-Step Breakdown**: List each item and its count separately before summing them to ensure no items are missed",
                "\n\n4",
                " **Verification Emphasis**: After counting, double-check your total to ensure accuracy before providing the final answer",
                "\n\n5",
                " **Error Awareness**: Be mindful of common counting errors and take a moment to self-correct if the total seems off",
                "\n\n6",
                " **Feedback Loop**: After providing an answer, reflect on your reasoning process to ensure all steps were followed correctly",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a microwave, a lamp, four cars, a stove, a toaster, and a bed. How many objects do I have?"
        ],
        [
            0.86,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure clarity and consistency:\n\n1",
                " Break down the problem and list each component of the calculation separately",
                "\n2",
                " Use mathematical symbols to represent the calculation, such as \"1 + 1 + 1 + 1 + 2 + 2 = 8",
                "\"\n3",
                " Maintain a consistent format throughout the response, using a structure like \"X + Y + Z = Total",
                "\"\n4",
                " Avoid redundancy by stating the total only once, either within the calculation or as a separate statement",
                "\n5",
                " Explicitly state all components involved in the calculation without using ellipses or implied content",
                "\n6",
                " Keep the response clear and concise, avoiding unnecessary words or phrases",
                "\n\nThe last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a chicken, a frog, a mouse, a cat, two pigs, and two rabbits. How many animals do I have?"
        ],
        [
            0.86,
            "0",
            [
                "You will answer a reasoning question",
                " Break down the problem into smaller, manageable steps, and explain each step clearly to ensure a thorough understanding and accurate calculation",
                " Clearly state your counting method, including any assumptions or groupings made during the process",
                " After calculating your answer, re-evaluate your steps to ensure accuracy",
                " Confirm your result by recounting or cross-referencing with the provided data",
                " Check if your calculated answer falls within a reasonable range of expected values",
                " If it seems off, consider re-evaluating your steps or providing a confidence score",
                " Consider any implicit details or additional data points that could affect your count to avoid undercounting or overcounting",
                " Provide a step-by-step breakdown of your counting process to help identify any logical errors or misinterpretations",
                " If your answer differs from the expected result, analyze the discrepancy to adjust your future reasoning processes",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a stove, a bed, a lamp, three microwaves, a chair, a toaster, a table, two cars, a fridge, and an oven. How many objects do I have?"
        ],
        [
            0.85,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " List each instrument and its quantity, then sum them step by step to ensure clarity and accuracy",
                " After calculating, double-check each step to ensure the arithmetic operations are correct and consistent with the final answer",
                " Consider any additional context or rules that might influence the total number of instruments, and include this in your reasoning",
                " After arriving at a total, re-evaluate your calculation and provide a brief rationale for the answer to ensure it aligns with the problem statement",
                " If you detect any inconsistencies or errors in your calculations, correct them before finalizing your answer",
                " Use a validation step to cross-reference your result with the initial data",
                " Use multiple methods to verify your answer, such as re-calculating using a different approach or cross-referencing with known data",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a trombone, a violin, a clarinet, an accordion, four flutes, a trumpet, two drums, and a piano. How many musical instruments do I have?"
        ],
        [
            0.85,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a detailed, step-by-step explanation of your reasoning and calculations",
                " Begin by listing each item and its quantity before calculating the total",
                " After calculating the total, verify the arithmetic by recounting the items or restating the problem",
                " Identify and mention any specific conditions or constraints that may affect the calculation",
                " Ensure that all steps and calculations are clearly and completely stated, without omitting any part of the reasoning process",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have three blackberries, two strawberries, an apple, three oranges, a nectarine, a grape, a peach, a banana, and a plum. How many fruits do I have?"
        ],
        [
            0.85,
            "1",
            [
                "You will answer a reasoning question",
                " Clearly state each step of your calculation process, including the addition of each type of instrument",
                " Provide a detailed breakdown of your reasoning before concluding with the final answer",
                " Consider all possible scenarios, including when there are zero items of a type, and ensure your response accounts for these cases",
                " After calculating, verify your result by re-evaluating the sum to ensure it matches the expected total",
                " If you detect a discrepancy in your calculation, flag it and attempt to correct it before providing the final answer",
                " Your reasoning should be transparent and easy to follow, ensuring that each step is clearly explained",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a piano, a flute, and four trombones. How many musical instruments do I have?"
        ],
        [
            0.85,
            "0",
            [
                "You will answer a reasoning question",
                " First, identify the type of problem (e",
                "g",
                ", counting, categorization) before proceeding",
                " For counting tasks, list each item and its quantity before summing them up",
                " Pay special attention to text within parentheses, as it may contain critical information for solving the problem",
                " After deriving an answer, re-evaluate the problem statement to ensure all elements have been considered",
                " Compare your answer with the expected format and analyze any discrepancies to identify potential errors",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                " Use feedback from incorrect predictions to refine your approach in future tasks",
                ""
            ],
            "I have two heads of broccoli, an apple, a lettuce head, and two onions. How many vegetables do I have?"
        ],
        [
            0.84,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " List each item and its quantity before performing the addition",
                " Ensure all components of the calculation are explicitly stated and consistent with the final answer",
                " Use mathematical symbols or formatting to clearly delineate the calculation process",
                " Include a brief verification step or statement confirming the correctness of the calculation",
                " Conclude with the final numerical result clearly stated",
                " Your goal is to ensure clarity, accuracy, and completeness in your response",
                ""
            ],
            "I have a trumpet, four trombones, an accordion, a clarinet, a violin, and a drum. How many musical instruments do I have?"
        ],
        [
            0.83,
            "1",
            [
                "You will answer a reasoning question",
                " Rephrase the question in your response to ensure clarity",
                " List each item you are counting before providing the final numerical answer",
                " Explain the reasoning behind your answer to ensure clarity and alignment with the question's context",
                " Detail each step of your reasoning process to ensure thoroughness and accuracy in your answer",
                " If the input is unclear, include a verification step or ask for clarification to ensure accurate understanding",
                " Adhere to a consistent response format that aligns with expected evaluation criteria",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a car, and a toaster. How many objects do I have?"
        ],
        [
            0.82,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step and provide a clear and concise explanation of your reasoning process",
                " Explain each step of your calculation clearly, ensuring that the reasoning process is easy to follow",
                " Ensure your response is relevant to the specific context of the question, addressing any specific details or scenarios mentioned",
                " If the input is ambiguous or incomplete, ask for clarification or provide a range of possible answers based on different interpretations",
                " Use a friendly and engaging tone to enhance user experience, especially in educational contexts",
                " Conclude with 'Answer: $VALUE', but feel free to include additional context if it enhances understanding",
                ""
            ],
            "I have an orange, three strawberries, an apple, three bananas, three raspberries, a peach, a blackberry, a grape, a plum, and two nectarines. How many fruits do I have?"
        ],
        [
            0.82,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step and list each quantity and its corresponding instrument before summing them up",
                " Use consistent terms such as 'total number of instruments' or 'sum of instruments' when referring to the final count",
                " Avoid using ellipses or ambiguous symbols; instead, provide a clear and complete explanation of each step",
                " Conclude with a verification statement that confirms the calculation, such as 'Therefore, the total number of musical instruments is $VALUE",
                "' After calculating, briefly recheck the arithmetic operation to ensure accuracy, and mention any discrepancies if found",
                " Reiterate the total number of instruments after listing the individual quantities to ensure clarity and understanding",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a trumpet, a clarinet, two trombones, a flute, five violins, and a piano. How many musical instruments do I have?"
        ],
        [
            0.82,
            "0",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " Explain your counting method clearly, specifying each type of item and any assumptions made during the process",
                " After calculating your answer, verify your result by recounting or using a different method to ensure accuracy",
                " Consider any contextual clues or implicit details that might influence the count, and incorporate these into your reasoning",
                " Reflect on similar past queries and known answers to identify potential errors in your reasoning",
                " Use clear and precise language to describe your counting process, avoiding any ambiguities",
                " If unsure, revisit your reasoning steps to ensure the accuracy of your final answer",
                " Be open to feedback on your answer's correctness and use it to refine your future predictions",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a carrot, an onion, a stalk of celery, three yams, a garlic, a head of broccoli, and a potato. How many vegetables do I have?"
        ],
        [
            0.81,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a brief summary of the calculation process and ensure accurate arithmetic",
                " Conclude with a direct statement: 'The total is $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a flute, two clarinets, a piano, a violin, and three accordions. How many musical instruments do I have?"
        ],
        [
            0.79,
            "1",
            [
                "You will answer a reasoning question",
                " Identify the type of question and adapt your reasoning strategy accordingly",
                " Think step by step, using logical reasoning, arithmetic calculations, or categorization as needed",
                " Explain your reasoning process in detail before providing the final answer",
                " After reasoning, review your steps to ensure accuracy",
                " Consider the context and any implicit information in the question to ensure a comprehensive understanding",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                " If the answer is not strictly numerical, provide a clear explanation",
                ""
            ],
            "I have a drum, an accordion, and a violin. How many musical instruments do I have?"
        ],
        [
            0.78,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step, ensuring each step is clearly numbered or bulleted, and avoid unnecessary steps",
                " Emphasize mathematical accuracy throughout your reasoning",
                " After reasoning, provide a concise final answer",
                " Avoid redundancy by ensuring the final answer appears only once, in the format: 'Answer: $VALUE' where VALUE is a numerical value",
                " Use ellipses appropriately to indicate omitted content, if necessary",
                " The final answer format should be the only line containing the numerical answer, without additional text",
                ""
            ],
            "I have a trumpet, an accordion, three clarinets, and a violin. How many musical instruments do I have?"
        ],
        [
            0.77,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step, but summarize calculations concisely",
                " List each step of the calculation clearly and concisely",
                " Use the following format for your response: \"Calculation: [detailed steps] Result: $VALUE\" where VALUE is a numerical value",
                " Avoid repeating the final answer in different formats and do not use ellipses",
                ""
            ],
            "I have a blackberry, a peach, a nectarine, a plum, a raspberry, an orange, a strawberry, a banana, two apples, and four grapes. How many fruits do I have?"
        ],
        [
            0.77,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " List each calculation step explicitly without using ellipses, ensuring clarity in the process",
                " Use a consistent format for calculations, such as '3 clarinets + 1 trombone = 4 instruments', to ensure clarity and ease of parsing",
                " Ensure consistent terminology for all items to facilitate accurate parsing and verification",
                " Implement a standardized response structure to handle potential errors and ensure reliable parsing",
                " Simplify expressions by avoiding unnecessary complexity and using direct, clear language to describe calculations",
                " If the calculation is clearly shown, omit the 'Answer: $VALUE' line to streamline the response",
                ""
            ],
            "I have a flute, a trumpet, three accordions, three violins, a drum, three clarinets, and a trombone. How many musical instruments do I have?"
        ],
        [
            0.77,
            "0",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy:\n\n1",
                " **Identify and List**: First, list each object mentioned in the input",
                "\n2",
                " **Apply Numerical Quantifiers**: Pay special attention to numerical descriptors such as 'two' or 'three' that indicate multiple items, and apply them to the corresponding objects",
                "\n3",
                " **Enumerate Objects**: As you count, enumerate each object, such as '1",
                " couch, 2",
                " oven, 3",
                " microwave, 4",
                " microwave, 5",
                " fridge,' to ensure accuracy",
                "\n4",
                " **Sum the Total**: Sum the total number of objects after applying the numerical quantifiers",
                "\n5",
                " **Error-Checking**: Review the list to ensure all objects and their quantities have been accurately accounted for",
                "\n6",
                " **Contextual Awareness**: Consider the context of each item and its descriptors to ensure an accurate count",
                "\n7",
                " **Example for Clarity**: For example, if the input is 'two apples and a banana,' the correct count is three objects",
                "\n8",
                " **Feedback Mechanism**: If uncertain about the count, review the list and recount to confirm accuracy",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a couch, an oven, two microwaves, and a fridge. How many objects do I have?"
        ],
        [
            0.76,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step and provide a detailed breakdown of your reasoning process",
                " Consider any qualifiers or exceptions in the input and adjust your response accordingly",
                " If you detect any inconsistencies or errors in the input, note them before providing the final answer",
                " For longer lists, group similar items together to maintain clarity",
                " Consider edge cases and provide a robust response that accounts for potential complexities in the input",
                " The last line of your response should be in the following format: 'Total animals: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a mouse, a rabbit, a dog, a duck, and two goats. How many animals do I have?"
        ],
        [
            0.75,
            "0",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " Follow these strategies:\n\n1",
                " **Explicit Counting Instructions**: Identify and count each distinct object mentioned in the input, paying special attention to numerical quantifiers",
                "\n2",
                " **Clarification on Numerical Quantifiers**: Ensure that numerical descriptors, such as 'four cars,' are accurately parsed and counted as separate entities",
                "\n3",
                " **List Parsing Strategy**: When presented with a list, treat each item as an individual object unless specified otherwise, and verify the count of each item",
                "\n4",
                " **Verification Step**: After determining the count, cross-check the total with the input list to ensure accuracy before finalizing the answer",
                "\n5",
                " **Contextual Awareness**: Consider the context and structure of the input to accurately interpret the relationships between items",
                "\n6",
                " **Error Recognition and Correction**: If the initial count seems inconsistent with the input, re-evaluate the list to identify any discrepancies",
                "\n7",
                " **Feedback Integration**: Use feedback from previous tasks to refine your counting and comprehension strategies",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a microwave, a table, a fridge, a stove, an oven, a toaster, a couch, and four cars. How many objects do I have?"
        ],
        [
            0.74,
            "1",
            [
                "Provide a concise calculation summary and directly give the total number of objects in the format 'Total objects: X'",
                " Verify the calculation for accuracy before providing the final total",
                " Use mathematical symbols if applicable, and avoid ellipses or any indication of omitted content",
                ""
            ],
            "I have a stove, a chair, two tables, a toaster, a fridge, three beds, and a couch. How many objects do I have?"
        ],
        [
            0.72,
            "0",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " First, list each item identified as a vegetable before counting them",
                " After identifying and counting the items, verify the total by recounting or cross-referencing with the input list",
                " Ensure that all relevant information from the input is considered, and clarify any ambiguous terms or quantities",
                " Pay attention to keywords or phrases that indicate quantities, such as 'two cabbages,' and ensure they are accurately accounted for in the calculation",
                " If you are unsure about the accuracy of your calculation, consider asking for confirmation or additional information",
                " Reflect on your reasoning process and consider how it aligns with the input data to improve accuracy",
                " Strive for accuracy in your calculations, as this will be validated against known data",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a yam, a cauliflower, a bed, two cabbages, a garlic, an oven, a carrot, a head of broccoli, a potato, a stalk of celery, a lettuce head, and a toaster. How many vegetables do I have?"
        ],
        [
            0.67,
            "1",
            [
                "You will answer a reasoning question",
                " Begin your response with the final answer, followed by any necessary reasoning",
                " Use efficient reasoning to arrive at the answer quickly",
                " Provide a concise answer after minimal reasoning",
                " Ensure the answer is clearly formatted and stands out from any reasoning",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a blackberry, a raspberry, a peach, a head of broccoli, a plum, an orange, two bananas, a grape, two garlics, a nectarine, a lettuce head, and an apple. How many fruits do I have?"
        ],
        [
            0.67,
            "1",
            [
                "Provide the numerical answer directly and concisely",
                " For simple questions, respond with only the numerical answer in the format: 'Answer: $VALUE'",
                " Ensure no additional text is included",
                " For complex reasoning questions, think step by step",
                " Your response should be optimized for quick processing and evaluation",
                " Example: For the question 'How many apples are there if you have 3 apples?', respond with 'Answer: 3'",
                " Avoid responses like 'You have three apples, so the answer is 3",
                "'"
            ],
            "I have a piano, and a trombone. How many musical instruments do I have?"
        ],
        [
            0.66,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a concise answer without unnecessary explanation",
                " Focus on delivering the numerical answer directly",
                " Ensure the answer is formatted as 'Answer: $VALUE' to maintain consistency",
                " Use step-by-step reasoning only for complex problems; otherwise, provide the answer directly",
                " Avoid redundant explanations when the task is straightforward",
                ""
            ],
            "I have a head of broccoli, a cabbage, a lettuce head, an onion, a carrot, a garlic, and a yam. How many vegetables do I have?"
        ],
        [
            0.66,
            "1",
            [
                "You will answer a reasoning question",
                " First, identify the type of question being asked (e",
                "g",
                ", counting, reasoning, comparison) and tailor your response accordingly",
                " Think step by step and provide a single, clear answer without repeating the numerical value",
                " If the input data is ambiguous or incomplete, request clarification or provide a best-guess answer with a confidence level",
                " When appropriate, offer additional insights or suggestions based on the answer to enhance user engagement",
                " The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a yam, a cauliflower, a garlic, two lettuce heads, a head of broccoli, a potato, a stalk of celery, and an onion. How many vegetables do I have?"
        ],
        [
            0.65,
            "1",
            [
                "You will answer a reasoning question",
                " Provide only the final numerical answer unless detailed reasoning is requested",
                " Avoid repeating information or providing unnecessary explanations",
                " Ensure the answer is clearly formatted as 'Answer: $VALUE' on a separate line to facilitate easy identification",
                " Aim for the simplest possible response that accurately answers the question",
                " Your response will be used in a system that checks for correctness, so prioritize clarity and brevity",
                ""
            ],
            "I have an apple, three bananas, a strawberry, a peach, three oranges, a plum, a raspberry, two grapes, a nectarine, and a blackberry. How many fruits do I have?"
        ],
        [
            0.65,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy and consistency:\n\n1",
                " List each item and its quantity before calculating the total",
                "\n2",
                " Identify all items and categorize them as animals or non-animals",
                "\n3",
                " Count each category separately",
                "\n4",
                " After listing, verify the count by cross-checking with the input list to ensure no items are missed or miscounted",
                "\n5",
                " Interpret phrases like 'a couple of' or 'a few' with their numerical equivalents, and clarify any ambiguous terms before proceeding with the count",
                "\n6",
                " Use logical reasoning to cross-verify the total with the input list, ensuring the count aligns with the provided items",
                "\n\nProvide the total in the format: 'Total animals: X' where X is the numerical value",
                ""
            ],
            "I have a duck, a peach, a strawberry, a fish, two chickens, a bear, and a banana. How many animals do I have?"
        ],
        [
            0.65,
            "1",
            [
                "Provide the numerical answer directly",
                " Respond with only 'Answer: $VALUE' and no other text",
                " Do not list or describe the items unless explicitly asked",
                " Simplify your response to the minimal necessary information to ensure efficient processing",
                " Avoid any additional text that could confuse the function's interpretation",
                " Example: For the question 'How many apples?', respond with 'Answer: 5'",
                ""
            ],
            "I have a fish, a bear, and a frog. How many animals do I have?"
        ],
        [
            0.65,
            "1",
            [
                "Compute the answer directly and concisely",
                " Provide only the numerical result using the format: '= $VALUE', where VALUE is the numerical answer",
                ""
            ],
            "I have three fridges, a bed, and five stoves. How many objects do I have?"
        ],
        [
            0.64,
            "1",
            [
                "You will answer a reasoning question",
                " Provide the shortest possible response that accurately answers the question",
                " Focus on delivering the numerical answer directly, without additional context or explanation",
                " Your response should only include the numerical answer in the format 'Answer: $VALUE' with no preceding text",
                " Eliminate any redundant information that does not contribute to the correctness of the numerical answer",
                " Avoid using unnecessary punctuation or words that do not affect the correctness of the answer",
                " Optimize your response for efficiency by minimizing text length while maintaining accuracy",
                ""
            ],
            "I have three oranges, a pig, a frog, a cow, three bananas, a nectarine, and a snail. How many animals do I have?"
        ],
        [
            0.63,
            "1",
            [
                "You will answer a reasoning question",
                " Provide the most concise response possible while maintaining clarity",
                " Think step by step, and avoid unnecessary repetition or redundant phrases unless explicitly required",
                " Use simple and direct language to convey your answer",
                " Ensure your response is robust and consistent, even with variations in input",
                " Focus on delivering the correct numerical value efficiently",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a blackberry, a plum, and a banana. How many fruits do I have?"
        ],
        [
            0.63,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a brief reasoning",
                " Focus on the numerical answer only",
                " Output the count as 'Count: $VALUE' where VALUE is a numerical value",
                " Keep the response as short as possible while maintaining clarity",
                " Ensure the response is consistent regardless of input variations",
                ""
            ],
            "I have a donkey, a chicken, a pig, and a snail. How many animals do I have?"
        ],
        [
            0.62,
            "0",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure accuracy:\n\n1",
                " **List Enumeration**: Begin by listing each item individually to ensure all relevant items are considered",
                "\n2",
                " **Verification Step**: After listing, verify that the number of items matches the count you provide",
                "\n3",
                " **Contextual Completeness Check**: Ensure all relevant items are included in your list based on the context provided",
                "\n4",
                " **Clarification and Error Handling**: If unsure about the completeness of your list, include a clarification statement or ask for confirmation",
                "\n5",
                " **Algorithmic Approach Guidance**: First, generate a list of items, then count them to ensure the number matches your final answer",
                "\n6",
                " **Feedback Loop**: After providing your answer, review your steps to ensure accuracy and completeness",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have three yams, a lettuce head, an onion, a potato, a cabbage, a carrot, two heads of broccoli, and two stalks of celery. How many vegetables do I have?"
        ],
        [
            0.61,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a concise and direct response",
                " Only include additional context if necessary for understanding",
                " Ensure your final output strictly follows the format: 'Answer: $VALUE' where VALUE is a numerical value",
                " Validate your response to match this format before finalizing",
                ""
            ],
            "I have a flute, and an accordion. How many musical instruments do I have?"
        ],
        [
            0.61,
            "1",
            [
                "Provide a concise answer to the reasoning question",
                " Begin with the answer, followed by a brief explanation if necessary",
                " State the answer directly and succinctly",
                " Avoid repeating the answer in different forms",
                " If possible, provide the answer as a standalone number",
                " Focus on efficiency and clarity in your response",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a cauliflower, a stalk of celery, a cabbage, and a garlic. How many vegetables do I have?"
        ],
        [
            0.59,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a concise numerical answer",
                " Respond only with 'Answer: $VALUE' and no additional explanation",
                " Do not include object descriptions or counts, only provide the final numerical answer",
                " If the question is unclear or cannot be answered with a number, respond with 'Answer: N/A'",
                " Always start your response with 'Answer:' to ensure consistency",
                " For questions about object counts, respond directly with the number of objects",
                " Your response should be optimized for quick processing by a string-based function",
                ""
            ],
            "I have a fridge, a chair, and a microwave. How many objects do I have?"
        ],
        [
            0.59,
            "1",
            [
                "Provide a concise answer to the reasoning question",
                " Focus on the final numerical answer",
                " Output only the numerical value when appropriate",
                ""
            ],
            "I have a piano, a trombone, a clarinet, a goat, an accordion, and a trumpet. How many musical instruments do I have?"
        ],
        [
            0.58,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step, but keep explanations brief and to the point",
                " Provide concise responses to minimize processing time",
                " List items using commas and avoid unnecessary words",
                " Eliminate redundant phrases to streamline the response",
                " Present the answer immediately after listing the items",
                " Use symbols or abbreviations to shorten the response if possible",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                " Example: 'Fruits: orange, apple, blackberry",
                " Answer: 3'"
            ],
            "I have an orange, an apple, and a blackberry. How many fruits do I have?"
        ],
        [
            0.57,
            "1",
            [
                "You will answer a reasoning question",
                " Provide a concise numerical answer",
                " Do not list items unless necessary for the answer",
                " Provide the answer as a number only, without additional text",
                " Ensure the response format is consistent regardless of input variations",
                " Your response should be in the format: 'Number of fruits: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a raspberry, a grape, and an orange. How many fruits do I have?"
        ],
        [
            0.55,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " Explain the reasoning behind your answer, especially if the input is complex or ambiguous",
                " If the input contains categories or sub-items, ensure to count only the primary objects and clarify any assumptions made",
                " Conclude your response with 'The total number of objects is: $VALUE' where VALUE is a numerical value",
                " If the input list is incomplete or malformed, identify the issue and communicate it clearly in your response",
                " Consider scalability by applying your reasoning to larger datasets, ensuring accuracy and consistency",
                ""
            ],
            "I have a fridge, a chair, a bed, an oven, a microwave, and a car. How many objects do I have?"
        ],
        [
            0.52,
            "1",
            [
                "You will answer a reasoning question",
                " Follow these steps to ensure clarity and accuracy:\n\n1",
                " **Explicit Enumeration**: List each item explicitly and ensure no omissions",
                " Use a structured format, such as bullet points or numbered lists, to maintain consistency",
                "\n\n2",
                " **Verification Step**: After listing all items, recount to confirm the total number of items matches the stated total",
                "\n\n3",
                " **Redundancy Avoidance**: Provide a concise summary without repeating information unnecessarily",
                "\n\n4",
                " **Error Handling**: If there is a discrepancy between the listed items and the total count, re-evaluate the list and correct any errors",
                "\n\n5",
                " **Clarification on Numerical Value**: Ensure the numerical value is the result of a verified count of the listed items",
                "\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a flute, a piano, a trombone, four stoves, a violin, an accordion, a clarinet, a drum, two lamps, and a trumpet. How many musical instruments do I have?"
        ],
        [
            0.38,
            "1",
            [
                "You will answer a reasoning question",
                " Think step by step",
                " Explain why the answer is correct by summarizing the reasoning process",
                " Regardless of the order or format of the input, ensure to accurately identify and count the distinct objects",
                " Identify and count only unique objects, ignoring any non-object items or duplicates unless specified otherwise",
                " Apply this counting strategy to various types of items and larger lists, ensuring accuracy and adaptability",
                " Use an efficient approach to counting that can scale to larger datasets or more complex queries",
                " The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                ""
            ],
            "I have a fridge, an oven, a car, a toaster, a microwave, a table, and a bed. How many objects do I have?"
        ],
        [
            0.28,
            "1",
            [
                "You will answer a reasoning question",
                " List each item and its quantity directly using the format 'quantity:item', separated by commas",
                " After listing, provide the total number of items",
                " Ensure the total matches the input list",
                " The last line of your response should be in the following format: 'Answer: $VALUE' where VALUE is a numerical value",
                " Provide the total number of fruits only in the 'Answer' section",
                ""
            ],
            "I have a banana, four strawberries, an apple, two peaches, a plum, a blackberry, and two raspberries. How many fruits do I have?"
        ]
    ]
}