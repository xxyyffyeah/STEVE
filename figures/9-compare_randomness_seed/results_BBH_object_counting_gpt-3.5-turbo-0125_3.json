{
    "test_acc": [
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1
        ],
        [
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1
        ],
        [
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1
        ],
        [
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1
        ],
        [
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0
        ],
        [
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1
        ],
        [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0
        ]
    ],
    "prompt": [
        "You will answer a reasoning question. Think step by step. The last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure clarity and accuracy:\n\n1. **Identify and List**: Begin by identifying and listing each item mentioned in the query, categorizing them as necessary (e.g., fruits, animals).\n\n2. **Categorize and Count**: Clearly categorize each item and count the relevant categories. Ensure that each step of your reasoning is clearly articulated in your response.\n\n3. **Verify Each Step**: After categorizing and counting, verify each step to ensure accuracy. Cross-check your categorization and calculations.\n\n4. **Consider Context**: Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input. Consider all relevant details from the query and ensure they are accurately reflected in your response.\n\n5. **State Assumptions**: If any assumptions are made during the reasoning process, clearly state and justify them to ensure transparency.\n\n6. **Provide a Detailed Explanation**: Offer a detailed explanation of your reasoning to ensure clarity and understanding.\n\n7. **Structured Format**: Present your reasoning in a clear, structured format, and conclude with the final answer in the specified format.\n\nThe last line of your response should be of the following format: 'Answer: $VALUE' where VALUE is a numerical value.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: Begin by identifying each item mentioned in the query, categorizing them as necessary (e.g., fruits, animals), and counting the relevant categories. Ensure that each step of your reasoning is clearly articulated in your response.\n\n2. **Verify and Summarize**: After categorizing and counting, verify each step to ensure accuracy. Cross-check your categorization and calculations, and provide a brief summary of your reasoning.\n\n3. **Consider Context and State Assumptions**: Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input. Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n\n4. **Structured Format and Final Answer**: Present your reasoning in a clear, structured format, and conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value. Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: Begin by listing each item mentioned in the query. Categorize them with a brief explanation (e.g., fruits, animals, musical instruments) and count the relevant categories. Use bullet points or a tabular format for clarity and consistency. Provide a one-sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n\n2. **Verify and Summarize**: After categorizing and counting, verify each step to ensure accuracy. Cross-check your categorization and calculations against a predefined list or database of categories. Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n\n3. **Consider Context and State Assumptions**: Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input. Clearly state and justify any assumptions made during the reasoning process to ensure transparency. Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n\n4. **Error Handling and Feedback Loop**: Implement error checks or validations by cross-referencing your categorization with a predefined list of categories. Assign a confidence score to your reasoning or flag areas of uncertainty. Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n\n5. **Structured Format and Final Answer**: Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer. Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value. Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: Begin by listing each item mentioned in the query. Use a tabular format with columns for the item name, category, and a brief justification for the categorization (e.g., fruits, animals, musical instruments). Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects). Provide a one-sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n\n2. **Verify and Summarize**: After categorizing and counting, verify each step to ensure accuracy. Cross-check your categorization and calculations against a predefined list or database of categories. Provide a brief summary of your reasoning, highlighting any assumptions or rules applied. Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified.\n\n3. **Consider Context and State Assumptions**: Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input. Clearly state and justify any assumptions made during the reasoning process to ensure transparency. Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization. Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n4. **Error Handling and Feedback Loop**: Implement error checks or validations by cross-referencing your categorization with a predefined list of categories. Assign a confidence score to your reasoning or flag areas of uncertainty. Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made. Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made.\n\n5. **Structured Format and Final Answer**: Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer. Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value. Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth. Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: Begin by explicitly listing each item mentioned in the query. Use a tabular format with columns for the item name, category, and a comprehensive justification for the categorization (e.g., fruits, animals, musical instruments). Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects). Provide a complete sentence justification for each categorization to enhance understanding and serve as a self-check mechanism. Avoid using ellipses or incomplete sentences.\n\n2. **Verify and Summarize**: After categorizing and counting, perform a secondary count check to ensure accuracy. Cross-check your categorization and calculations against a predefined list or database of categories. Provide a brief summary of your reasoning, highlighting any assumptions or rules applied. Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified. Explicitly restate the items and their quantities before proceeding to the final answer.\n\n3. **Consider Context and State Assumptions**: Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input. Clearly state and justify any assumptions made during the reasoning process to ensure transparency. Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization. Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n4. **Error Handling and Feedback Loop**: Implement error checks or validations by cross-referencing your categorization with a predefined list of categories. Assign a confidence score to your reasoning or flag areas of uncertainty. Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made. Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made. Introduce a mechanism for recognizing and learning from error patterns by maintaining a log of predictions versus the ground truth.\n\n5. **Structured Format and Final Answer**: Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer. Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value. Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth. Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary. Simplify the format by providing a clear, step-by-step template that the model can easily follow.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy. Incorporate examples of correctly executed tasks to serve as a reference for the model.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: \n   - List each item mentioned in the query in a tabular format with columns for the item name, category, and a comprehensive justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects).\n   - Provide a complete sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n   - Avoid using ellipses or incomplete sentences.\n\n2. **Verify and Summarize**: \n   - Perform a secondary count check to ensure accuracy by cross-referencing your categorization and calculations against a predefined list or database of categories.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified.\n   - Explicitly restate the items and their quantities before proceeding to the final answer.\n\n3. **Consider Context and State Assumptions**: \n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n   - Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n4. **Error Handling and Feedback Loop**: \n   - Implement error checks or validations by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n   - Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made.\n   - Introduce a mechanism for recognizing and learning from error patterns by maintaining a log of predictions versus the ground truth.\n\n5. **Structured Format and Final Answer**: \n   - Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value.\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n   - Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary.\n   - Simplify the format by providing a clear, step-by-step template that the model can easily follow.\n\n6. **Iterative Refinement and Learning**: \n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n   - Maintain a feedback loop to analyze previous mistakes and adjust the approach to counting and categorization accordingly.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: \n   - List each item mentioned in the query in a tabular format with columns for the item name, category, and a comprehensive justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects).\n   - Provide a complete sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n   - Avoid using ellipses or incomplete sentences.\n\n2. **Verify and Summarize**: \n   - Perform a secondary count check to ensure accuracy by cross-referencing your categorization and calculations against a predefined list or database of categories.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified.\n   - Explicitly restate the items and their quantities in a bullet-point format before proceeding to the final answer.\n\n3. **Consider Context and State Assumptions**: \n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n   - Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n4. **Error Handling and Feedback Loop**: \n   - Implement error checks or validations by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n   - Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made.\n   - Introduce a mechanism for recognizing and learning from error patterns by maintaining a log of predictions versus the ground truth.\n\n5. **Structured Format and Final Answer**: \n   - Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value.\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n   - Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary.\n   - Simplify the format by providing a clear, step-by-step template that the model can easily follow.\n\n6. **Iterative Refinement and Learning**: \n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n   - Maintain a feedback loop to analyze previous mistakes and adjust the approach to counting and categorization accordingly.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: \n   - List each item mentioned in the query in a tabular format with columns for the item name, category, and a comprehensive justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects).\n   - Provide a complete sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n   - Avoid using ellipses or incomplete sentences.\n\n2. **Explicit Enumeration and Summation**:\n   - Explicitly list each instance of an item separately to ensure clarity (e.g., instead of \"Pig (x2),\" list \"Pig, Pig\").\n   - Perform a summation of all items, ensuring the total count is accurate and clearly stated.\n\n3. **Verify and Summarize**: \n   - Perform a secondary count check to ensure accuracy by cross-referencing your categorization and calculations against a predefined list or database of categories.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified.\n   - Explicitly restate the items and their quantities in a bullet-point format before proceeding to the final answer.\n\n4. **Consider Context and State Assumptions**: \n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n   - Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n5. **Error Handling and Feedback Loop**: \n   - Implement error checks or validations by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n   - Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made.\n   - Introduce a mechanism for recognizing and learning from error patterns by maintaining a log of predictions versus the ground truth.\n\n6. **Structured Format and Final Answer**: \n   - Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with the final answer using the specific tag 'FinalAnswer: $VALUE' where VALUE is a numerical value.\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n   - Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary.\n   - Simplify the format by providing a clear, step-by-step template that the model can easily follow.\n\n7. **Iterative Refinement and Learning**: \n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n   - Maintain a feedback loop to analyze previous mistakes and adjust the approach to counting and categorization accordingly.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**: \n   - Begin by clearly stating the items to be identified and counted: \"The items to be identified and counted are: [list of items].\"\n   - List each item mentioned in the query in a tabular format with columns for the item name, category, and a comprehensive justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if it is mentioned multiple times (e.g., \"two microwaves\" should be counted as two separate objects).\n   - Provide a complete sentence justification for each categorization to enhance understanding and serve as a self-check mechanism.\n   - Avoid using ellipses or incomplete sentences.\n\n2. **Explicit Enumeration and Summation**:\n   - Explicitly list each instance of an item separately to ensure clarity (e.g., instead of \"Pig (x2),\" list \"Pig, Pig\").\n   - Perform a summation of all items, ensuring the total count is accurate and clearly stated.\n\n3. **Verify and Summarize**: \n   - Perform a secondary count check to ensure accuracy by cross-referencing your categorization and calculations against a predefined list or database of categories.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Re-evaluate the list of identified items to ensure all instances are accounted for, especially in cases where quantities are specified.\n   - Explicitly restate the items and their quantities in a bullet-point format before proceeding to the final answer.\n\n4. **Consider Context and State Assumptions**: \n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n   - Reflect on the context of the query to ensure that all items are counted and categorized appropriately.\n\n5. **Error Handling and Feedback Loop**: \n   - Implement error checks or validations by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n   - Flag any discrepancies between the initial count and the expected total, and provide a rationale for any adjustments made.\n   - Introduce a mechanism for recognizing and learning from error patterns by maintaining a log of predictions versus the ground truth.\n\n6. **Structured Format and Final Answer**: \n   - Present your reasoning in a clear, structured format using a template or format that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with a clear statement of the final count, e.g., \"The final count is X.\"\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n   - Use consistent terminology that aligns with the ground truth, and provide a glossary of terms or categories if necessary.\n   - Simplify the format by providing a clear, step-by-step template that the model can easily follow.\n\n7. **Iterative Refinement and Learning**: \n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n   - Maintain a feedback loop to analyze previous mistakes and adjust the approach to counting and categorization accordingly.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**:\n   - Clearly state the items to be identified and counted: \"The items to be identified and counted are: [list of items].\"\n   - List each item in a tabular format with columns for the item name, category, and a brief justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if mentioned multiple times, ensuring no items are overlooked.\n   - Provide a concise justification for each categorization to enhance understanding and serve as a self-check mechanism.\n\n2. **Explicit Enumeration and Summation**:\n   - Explicitly list each instance of an item separately to ensure clarity.\n   - Perform a summation of all items, ensuring the total count is accurate and clearly stated.\n\n3. **Verify and Summarize**:\n   - Cross-check your categorization and calculations against a predefined list or database of categories to ensure accuracy.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Restate the items and their quantities in a bullet-point format before proceeding to the final answer.\n\n4. **Consider Context and State Assumptions**:\n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n\n5. **Error Handling and Feedback Loop**:\n   - Implement error checks by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n\n6. **Structured Format and Final Answer**:\n   - Present your reasoning in a clear, structured format using a template that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with a clear statement of the final count, e.g., \"The count is X.\"\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n\n7. **Iterative Refinement and Learning**:\n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context.",
        "You will answer a reasoning question. Follow these steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify, Categorize, and Count**:\n   - Clearly state the items to be identified and counted: \"The items to be identified and counted are: [list of items].\"\n   - List each item in a tabular format with columns for the item name, category, and a brief justification for the categorization (e.g., fruits, animals, musical instruments).\n   - Count each instance of an item, even if mentioned multiple times, ensuring no items are overlooked.\n   - Provide a concise justification for each categorization to enhance understanding and serve as a self-check mechanism.\n\n2. **Explicit Enumeration and Summation**:\n   - Explicitly list each instance of an item separately to ensure clarity.\n   - Perform a summation of all items, ensuring the total count is accurate and clearly stated.\n\n3. **Verify and Summarize**:\n   - Cross-check your categorization and calculations against a predefined list or database of categories to ensure accuracy.\n   - Provide a brief summary of your reasoning, highlighting any assumptions or rules applied.\n   - Restate the items and their quantities in a bullet-point format before proceeding to the final answer.\n\n4. **Consider Context and State Assumptions**:\n   - Reflect on the scenario and ensure that all numbers and elements used in the calculation are justified by the input.\n   - Clearly state and justify any assumptions made during the reasoning process to ensure transparency.\n   - Consider potential ambiguities or edge cases and provide a rationale for the chosen categorization.\n\n5. **Error Handling and Feedback Loop**:\n   - Implement error checks by cross-referencing your categorization with a predefined list of categories.\n   - Assign a confidence score to your reasoning or flag areas of uncertainty.\n   - Reassess your output if there is a mismatch between the predicted and expected outcomes, allowing for adjustments to be made.\n\n6. **Structured Format and Final Answer**:\n   - Present your reasoning in a clear, structured format using a template that includes headings for each step and a clear separation between reasoning and the final answer.\n   - Conclude with a clear statement of the final count, e.g., \"The count is X.\"\n   - Ensure the final answer is directly derived from the verified list and count, aligning with the ground truth.\n\n7. **Iterative Refinement and Learning**:\n   - Encourage iterative refinement by reviewing past responses and adjusting strategies based on identified errors to improve future accuracy.\n   - Incorporate examples of correctly executed tasks to serve as a reference for the model.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context.",
        "You will answer a reasoning question. Follow these streamlined steps to ensure clarity, accuracy, and efficiency:\n\n1. **Identify and Count**:\n   - Clearly identify the items to be counted: \"The items to be counted are: [list of items].\"\n   - Count each instance of an item, ensuring no items are overlooked.\n\n2. **Direct Answer Presentation**:\n   - Present the final count directly and succinctly as \"Total: X\" to ensure consistency with the expected format.\n\n3. **Error Checking**:\n   - Cross-check your count against the input data to ensure accuracy before presenting the final answer.\n\n4. **Iterative Learning**:\n   - Review past responses to identify errors and adjust strategies for improved accuracy in future tasks.\n\nFocus on delivering the final answer quickly and efficiently, minimizing intermediate explanations unless essential for accuracy. Avoid redundant information and ensure consistent formatting of the final answer. When the final answer is a numerical value, present it as a standalone number without additional context."
    ],
    "validation_acc": []
}